var searchIndex = new Map(JSON.parse('[\
["libdottorrent",{"doc":"","t":"FFFFOONNNNNNNNOOONNNNOONNNNNNNNNNNOONNNNNONOOOOOONONNNNNNNNNNNNNNNNNNN","n":["File","Info","Node","Torrent","announce","announce_list","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","comment","created_by","creation_date","deserialize","deserialize","deserialize","deserialize","encoding","files","files_count","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","httpseeds","info","into","into","into","into","is_single","length","md5","md5sum","meta_version","name","nodes","piece_length","pieces","pieces_count","private","serialize","serialize","serialize","serialize","sha1","to_string","total_size","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"libdottorrent"],[70,"core::result"],[71,"serde::de"],[72,"core::fmt"],[73,"core::fmt"],[74,"alloc::string"],[75,"serde::ser"],[76,"core::any"]],"d":["","","","","Bittorrent file format V1: Tracker address","Bittorrent file format Ext(12): list of lists, inner list …","","","","","","","","","","","","","","","","","A list of dictionaries representing individual files …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","A list of HTTP seed URLs for direct file downloading.","Bittorrent file format: Info dictionary","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","size of the file in bytes (only when one file is being …","","","Bittorrent file format V2:torrent standard version, in …","suggested name to save the file (or directory if it is …","Bittorrent file format Ext(5): DHT Nodes","Bittorrent file format V1: The size of each piece in bytes","Bittorrent file format V1: a concatenation of each piece’…","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,6,6,1,4,5,6,1,4,5,6,6,6,6,1,4,5,6,6,5,6,1,4,5,5,6,1,4,5,6,6,6,6,1,4,5,6,6,5,6,5,5,5,6,5,5,6,5,1,4,5,6,6,5,6,1,4,5,6,1,4,5,6,1,4,5,6],"f":[0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[2,[1]]],3],[-1,[[2,[4]]],3],[-1,[[2,[5]]],3],[-1,[[2,[6]]],3],0,0,[6,7],[[1,8],9],[[4,8],9],[[5,8],9],[[5,8],9],[[6,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[11,[10]]],[[2,[6,12]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,13],0,[6,14],0,0,0,0,0,0,[6,7],0,[[1,-1],2,15],[[4,-1],2,15],[[5,-1],2,15],[[6,-1],2,15],[6,14],[-1,14,[]],[6,16],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]]],"c":[],"p":[[5,"Node",0],[6,"Result",70],[10,"Deserializer",71],[5,"File",0],[5,"Info",0],[5,"Torrent",0],[1,"usize"],[5,"Formatter",72],[8,"Result",72],[1,"u8"],[1,"slice"],[6,"Error",73],[1,"bool"],[5,"String",74],[10,"Serializer",75],[1,"u128"],[5,"TypeId",76]],"b":[[26,"impl-Debug-for-Info"],[27,"impl-Display-for-Info"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
