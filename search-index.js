var searchIndex = new Map(JSON.parse('[\
["libdottorrent",{"doc":"","t":"GFFPFOONNNNNNNNOOONNNOONNNNNNNNNNNONNNNNOONOOOOOOONNONNNNNNNNNNNNNNNNNN","n":["Error","File","Info","InvalidMetaData","Torrent","announce","announce_list","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","comment","created_by","creation_date","deserialize","deserialize","deserialize","encoding","files","files_count","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","info","into","into","into","into","is_single","length","length","md5","md5sum","md5sum","meta_version","name","path","piece_length","pieces","pieces_count","pieces_hashes","private","serialize","serialize","serialize","sha1","size","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"libdottorrent"],[71,"core::result"],[72,"serde::de"],[73,"core::fmt"],[74,"core::fmt"],[75,"alloc::string"],[76,"alloc::vec"],[77,"serde::ser"],[78,"core::any"]],"d":["","","","","","Bittorrent file format V1: Tracker address","Bittorrent file format Ext(12): list of lists, inner list …","","","","","","","","","","","","","","","","A list of dictionaries representing individual files …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Bittorrent file format: Info dictionary","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The total size of the file or files in bytes","size of the file in bytes (only when one file is being …","","","","Bittorrent file format V2:torrent standard version, in …","suggested name to save the file (or directory if it is …","The path to the file within the torrent structure","Bittorrent file format V1: The size of each piece in bytes","Bittorrent file format V1: a concatenation of each piece’…","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,7,0,5,5,7,1,4,5,7,1,4,5,5,5,5,1,4,5,5,4,5,7,1,4,4,5,7,1,4,5,5,5,7,1,4,5,5,1,4,5,1,4,4,4,1,4,4,5,5,4,1,4,5,5,5,4,7,1,4,5,7,1,4,5,7,1,4,5],"f":[0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[2,[1]]],3],[-1,[[2,[4]]],3],[-1,[[2,[5]]],3],0,0,[5,[[2,[6,7]]]],[[7,8],9],[[1,8],9],[[4,8],9],[[4,8],9],[[5,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[11,[10]]],[[2,[5,12]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,13],0,0,[5,14],0,0,0,0,0,0,0,[5,6],[5,[[2,[[15,[[11,[10]]]],7]]]],0,[[1,-1],2,16],[[4,-1],2,16],[[5,-1],2,16],[5,14],[5,[[2,[17,7]]]],[-1,14,[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]]],"c":[],"p":[[5,"File",0],[6,"Result",71],[10,"Deserializer",72],[5,"Info",0],[5,"Torrent",0],[1,"usize"],[6,"Error",0],[5,"Formatter",73],[8,"Result",73],[1,"u8"],[1,"slice"],[6,"Error",74],[1,"bool"],[5,"String",75],[5,"Vec",76],[10,"Serializer",77],[1,"u128"],[5,"TypeId",78]],"b":[[26,"impl-Display-for-Info"],[27,"impl-Debug-for-Info"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
